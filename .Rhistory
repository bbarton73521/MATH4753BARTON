install.packages("usethis")
edit_r_environ(usethis)
install.packages(edit_r_environ)
install.packages(edit.r)
library(usethis)
edit_r_environ(usethis)
edit_r_environ()
install.packages("devtools")
install.packages("Roxygen2")
install.packages("roxygen2")
install.packages("usethis")
install.packages(c("cli", "crayon", "knitr", "tibble"))
library(MATH4753BARTON)
library(usethis)
edit_r_environ()
library(usethis)
use_guthub(protocol = "https")
use_github(protocol = "https")
git checkout new-master
git branch- M main
defaultBranch = main
mkdir test123
git init
git commit -m "first commit"
git remote set-url origin git@github.com:MATH4753BARTON.git
$ git config --global --list
$ git config --global --list
mkdir ~/.git-template
mkdir ~/.git-template
mkdir ~.git-template
ref: refs/heads/main
use_github(protocol = "https")
git init
git_init
git checkout -t -b master origin/master
git checkout -b master
library(usethis)
use_github(protocol = "https")
yes
git master- b master
git master- master
git master b master
git master
git master- b master
git push -u origin master
git add .
git add .master
git add ("master")
git push -u origin master
git status
git_status
head()
head(usethis)
head(master)
head(MATH4753BARTON)
use_github(protocol = "https")
head(main)
knitr::opts_chunk$set(echo = TRUE)
ddt[1:3]
with(ddt, ddt[1,3])
library("usethis")
edit_r_environ(usethis)
use_github(protocol = "https")
usethis::use_mit_license("Brayden Barton")
library(MATH4753BARTON)
MATH4753BARTON::myplot(1:50)
?myplot
knitr::opts_chunk$set(echo = TRUE)
myplot=function(x){
y <- 0.86089580 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 4 Plot")
}
myplot=function(x){
y <- 0.86089580 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 4 Plot")
}
myplot(1:50)
knitr::opts_chunk$set(echo = TRUE)
myplot=function(x){
y <- 0.86089580 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 4 Plot")
}
myplot(1:50)
lab5plot = mybin(iter = 100, n = 10, p = 0.7)
## sampling function
# iter = iterations, n=sample size
# set default values
mybin=function(iter=100,n=10, p=0.7){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for( i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial simulation", xlab="Number of successes")
succ.tab/iter
}
lab5plot = mybin(iter = 100, n = 10, p = 0.7)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab5plot
lab5plot = mybin(iter = 100, n = 10, p = 0.7)
library(MATH4753BARTON)
MATH4753BARTON::lab5plot
lab5plot = mybin(iter = 100, n = 10, p = 0.7)
library(MATH4753BARTON)
MATH4753BARTON::lab5plot
for( i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial simulation", xlab="Number of successes")
succ.tab/iter
```
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
bin100 = mybin(iter = 100, n = 10, p = 0.7)
bin100
lab5plot
lab5plot(1:10)
lab5plot(1:10)
lab5plot(1:10)
lab5plot <- mybin(iter = 100, n = 10, p = 0.7)
lab5plot(1:10)
library(MATH4753BARTON)
MATH4753BARTON::bin100
lab5plot <- mybin(iter = 100, n = 10, p = 0.7)
lab5plot(1:10)
lab5plot
myplot2
plot(myplot2)
myplot2(1:10)
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- 0.86089580 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2(1:10)
y <- 0.86089580*x^2 + 1.46959217*x - 0.02745726*x^2
y <- 0.86089580*x^2 + 1.46959217*x - 0.02745726*x^2
y <- 0.86089580* + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- 0.86089580* + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2
myplot2(1:10)
myplot2(1:10)
y <- 0.86089580*x^3 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- 0.86089580*x^3 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2(1:10)
y <- 0.86089580*(x-7)^2 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- 0.86089580*(x-7)^2 + 1.46959217*x - 0.02745726*x^2
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2(1:10)
y <- 0.86089580*(x-7)^2 + 1.46959217*x
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- 0.86089580*(x-7)^2 + 1.46959217*x
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot(1:10)
y <- (x-7)^2 + 1.46959217*x
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
myplot(1:10)
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- (x-7)^2 + 1.46959217*x
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2(1:10)
myplot2(1:10)
myplot2(1:10)
myplot2
myplot2(1:10)
library(MATH4753BARTON)
MATH4753BARTON::myplot2
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::myplot2
library(MATH4753BARTON)
MATH4753BARTON::myplot2(1:10)
y <- -(.3(x-7))^2+5
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- -(.3(x-7))^2+5
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myplot2(1:10)
myplot2(1:10)
y <- x^3+ 5*x^2 + 4
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
#' @title Lab 5 plot
#'
#' @param x A quantitative vector
#'
#' @return A plot
#' @export
#'
#' @examples
#' \dontrun{d <- 1:40; myplot (x = d)}
myplot2=function(x){
y <- x^3+ 5*x^2 + 4
plot(y~x, col = "RED", lwd = 2, type = "l", main = "Lab 5 Plot")
}
myp
myplot2(1:10)
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::myplot2(1:10)
sigma= 2
myncurve = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
lab6plot = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
myncurve = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
plot(lab6curve)
=
=
=
=
mu = 5
sigma = 2
lab6curve = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
plot(lab6curve)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
curve(dnorm(x, mean=0,sd=1),xlim=c(-3,3))
xcurve1=seq(2,5,length=1000)
lab6plot= curve(dnorm(x, mean=0,sd=1),xlim=c(-3,3))
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=0, sd = 1)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(-3:3)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(-3:3)
lab6plot <- curve(dnorm(x, mean=0,sd=1),xlim=c(-3,3))
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=0, sd = 1)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=0, sd=1)-pnorm(2,mean=0, sd=1)
area= round(area,4)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(-3:3)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(-3:3)
lab6plot <- curve(dnorm(x, mean=0,sd=1),xlim=c(-3,3))
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=0, sd = 1)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=0, sd=1)-pnorm(2,mean=0, sd=1)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep ="")
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
lab6plot <-
plot (curve(dnorm(x, mean=10,sd=4),xlim=c(-10,30)))
lab6plot <- plot (curve(dnorm(x, mean=10,sd=4),xlim=c(-10,30)))
lab6plot <- plot (curve(dnorm(x, mean=10,sd=4),xlim=c(-10,30)))
lab6plot
lab6plot
lab6plot
plot(lab6plot)
plot(lab6plot)
lab6curve = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
plot(lab6curve(5,2))
library(MATH4753BARTON)
MATH4753BARTON::lab6curve(1:10)
library(MATH4753BARTON)
MATH4753BARTON::lab6curve(5:2)
library(MATH4753BARTON)
MATH4753BARTON::lab6curve(5:2)
lab6plot = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5:2)
plot(lab6plot)
plot(lab6plot(5,2))
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5:2)
library(MATH4753BARTON)
importFrom("stats", "dnorm")
lab6plot = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma))
}
lab6plot(5:2)
plot(lab6plot(10,5))
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5:2)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5:2)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=0, sd = 1)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=0, sd=1)-pnorm(2,mean=0, sd=1)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=5, sd = 2)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=5, sd=2)-pnorm(2,mean=5, sd=2)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=5, sd = 2)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=5, sd=2)-pnorm(2,mean=5, sd=2)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma), main = "LAB 6 R PACKAGE PLOT")
lab6plot = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma), main = "LAB 6 R PACKAGE PLOT")
}
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=5, sd = 2)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=5, sd=2)-pnorm(2,mean=5, sd=2)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
area = pnorm(5,mean=mu, sd=sigma)-pnorm(2,mean=mu, sd=sigma)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
lab6plot = function(mu, sigma){
curve(dnorm(x,mean=mu,sd=sigma), xlim = c(mu-3*sigma, mu + 3*sigma), main = "LAB 6 R PACKAGE PLOT")
xcurve1=seq(2,5,length=1000)
ycurve1=dnorm(xcurve1, mean=mu, sd = sigma)
polygon(c(2,xcurve1, 5), c(0,ycurve1, 0), col = "YELLOW")
area = pnorm(5,mean=mu, sd=sigma)-pnorm(2,mean=mu, sd=sigma)
area= round(area,4)
text(x=2.15, y=.025, paste("Area =", area, sep =""))
}
lab6plot(5,2)
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
MATH4753BARTON::lab6plot(5,2)
library(MATH4753BARTON)
install.packages(usethis)
install.packages("usethis")
FIRE=read.csv(“FIREDAM.csv”)
FIRE=read.csv(FIREDAM.csv)
knitr::opts_chunk$set(echo = TRUE)
FIRE=read.csv(“FIREDAM.csv”)
fire=read.csv(“FIREDAM.csv”)
setwd("C:/Users/15803/Desktop/MATH 4753 labs/MATH4753BARTON/R")
fire=read.csv(“FIREDAM.csv”)
FIRE <- read.csv(“FIREDAM.csv”)
FIRE <- read.csv(FIREDAM.csv)
FIRE <- read.csv(firedam.csv)
FIRE <- read.csv("firedam.csv")
FIRE <- read.csv("firedam.csv")
fire <- read.csv("firedam.csv")
usethis::use_data(fire)
usethis::use_data(fire)
library(MATH4753BARTON)
library(MATH4753BARTON)
knitr::opts_chunk$set(echo = TRUE)
library(MATH4753BARTON)
data(fire)
knitr::kable(head(fire))
library(usethis)
edit_r_environ()
library(MATH4753BARTON)
use_github(private=TRUE, protocol = "https")
library(usethis)
use_github(private = TRUE, protocol = "https")
> use_github(private = TRUE, protocol = "https")
use_github(private = TRUE, protocol = "https")
library(usethis)
use_github(private = TRUE, protocol = "https")
library(MATH4753BARTON)
library (usethis)
use_github(private = TRUE, protocol = "https")
library (usethis)
use_github(private = TRUE, protocol = "https")
use_github(private = TRUE, protocol = "https")
library(MATH4753BARTON)
library (usethis)
use_github(private = TRUE, protocol = "https")
